version: '2.1'

networks:
  monitor-net:
    driver: bridge

volumes:
    tenderduty:
    prometheus_data: 
      external: true
    grafana_data: {}
    caddy_data: {}
    grafana-storage:
      external: true

services:
  loki:
    image: grafana/loki:2.8.7
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.24.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v1.3.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.44.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:9.0.5
    env_file:
      - '.env'
    container_name: grafana
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      # - grafana-storage:/var/lib/grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=${GF_INSTALL_PLUGINS}
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:v1.4.3
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    image: caddy:2.3.0
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
      - "3000:3000"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
    volumes:
      - ./caddy:/etc/caddy
      - caddy_data:/data
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-JDJhJDE0JE91S1FrN0Z0VEsyWmhrQVpON1VzdHVLSDkyWHdsN0xNbEZYdnNIZm1pb2d1blg4Y09mL0ZP}
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  peggo_exporter:
    image: lavender5/peggo_prometheus_exporter:master
    container_name: peggo_exporter
    restart: unless-stopped
    env_file:
      - '.env'
    environment:
      - POLL_SECONDS=${POLL_SECONDS}
      - HTTP_PORT=${PEGGO_HTTP_PORT}
      - ORCHESTRATOR_ADDRESS=${PEGGO_ORCHESTRATOR_ADDRESS}
      - NODE_URL=${INJECTIVE_NODE_URL}
    ports:
      - "9910:9910"
    networks:
      - monitor-net

  tenderduty:
    image: lavender5/tenderduty:latest
    container_name: tenderduty
    restart: unless-stopped
    expose:
      - 8888    # Dashboard
      - 28686   # Prometheus exporter
    volumes:
      - 'tenderduty:/var/lib/tenderduty'
      - './tenderduty/config.yml:/var/lib/tenderduty/config.yml'
      - './tenderduty/chains.d:/var/lib/tenderduty/chains.d'
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    ports:
      - "8888:8888"
      - "28686:28686"
    networks:
      - monitor-net

  aleo_exporter:
    image: lavender5/aleo_prometheus_exporter:master
    container_name: aleo_exporter
    restart: unless-stopped
    env_file:
      - '.env'
    environment:
      - POLL_SECONDS=${POLL_SECONDS}
      - HTTP_PORT=${ALEO_HTTP_PORT}
      - NETWORK_ID=${ALEO_NETWORK_ID}
      - NODE_URL=${ALEO_NODE_URL}
    ports:
      - "9911:9911"
    networks:
      - monitor-net
